
&После("ОбработкаПроверкиЗаполнения")
Процедура днк_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Недействителен) И Недействителен Тогда Возврат; КонецЕсли;
	
	Если ЗначениеЗаполнено(НеЯвляетсяРезидентом) И НеЯвляетсяРезидентом Тогда Возврат; КонецЕсли;

	ОписаниеОшибки ="";
	
	Если (НЕ ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.ФизическоеЛицо")) Тогда
		Если НЕ ЗначениеЗаполнено(КодПоЕДРПОУ) Тогда
	    	Сообщение = Новый СообщениеПользователю();
			Если ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.ЮридическоеЛицо") Тогда 
	    		Сообщение.Текст =  НСтр("ru='Не указан код по ЕГРПОУ.';uk='Не вказаний код по ЄДРПОУ.'");
			ИначеЕсли ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.ИндивидуальныйПредприниматель") Тогда
	    		Сообщение.Текст =  НСтр("ru='Не указан код по ГРФЛ.';uk='Не вказаний код по ДРФО.'");
			КонецЕсли;
	    	Сообщение.Поле = "КодПоЕДРПОУ";
	    	Сообщение.УстановитьДанные(ЭтотОбъект);
	    	Сообщение.Сообщить();
		    // Так как информация в документе не консистентна, то продолжать работу дальше смысла нет
	    	Отказ = Истина;
			Возврат;
		ИначеЕсли НЕ РегламентированныеДанныеКлиентСервер.ЕДРПОУСоответствуетТребованиям(КодПоЕДРПОУ, (ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.ЮридическоеЛицо")), ОписаниеОшибки) Тогда 
	    	Сообщение = Новый СообщениеПользователю();
	    	Сообщение.Текст = ОписаниеОшибки;
	    	Сообщение.Поле = "КодПоЕДРПОУ";
	    	Сообщение.УстановитьДанные(ЭтотОбъект);
	    	Сообщение.Сообщить();
		    // Так как информация в документе не консистентна, то продолжать работу дальше смысла нет
	    	Отказ = Истина;
			Возврат;
		КонецЕсли;
	
		//Контроль дублей
		МассивДублей = Справочники.Контрагенты.ПроверитьДублиСправочникаКонтрагентыПоИННЕДРПОУ(СокрЛП(ИНН), СокрЛП(КодПоЕДРПОУ), Ссылка);
		Если МассивДублей.Количество() > 0 Тогда
	    	Сообщение = Новый СообщениеПользователю();
	   		Сообщение.Текст =  НСтр("ru='Существуют дубликаты контрагента с таким ЕГРПОУ и/или ИНН. Сохранение не возможно.';uk='Існують дублікати контрагента з таким ЄДРПОУ та/або ІПН. Збереження неможливо.'");
	    	Сообщение.Поле = "КодПоЕДРПОУ";
	    	Сообщение.УстановитьДанные(ЭтотОбъект);
	    	Сообщение.Сообщить();
		    // Так как информация в документе не консистентна, то продолжать работу дальше смысла нет
	    	Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&Вместо("ЗарегистрироватьДублиКонтрагентов")
Процедура днк_ЗарегистрироватьДублиКонтрагентов()
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	НужноВыполнятьПроверку = ЭтоНовый();
	
	ЭтоЮрЛицо = ВидКонтрагента = Перечисления.ВидыКонтрагентов.ЮридическоеЛицо;
	
	ИзменилсяИНН = НужноВыполнятьПроверку;
	ИзменилсяЕДРПОУ = НужноВыполнятьПроверку;
	
	Если НЕ НужноВыполнятьПроверку Тогда
		
		СтруктураПрежнихЗначений = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, 
																			  "ИНН,
																			  |КодПоЕДРПОУ,
																			  |ИННВведенКорректно,
																			  |ЕДРПОУВведенКорректно, 
																			  |ВидКонтрагента");
																			  
		Если НЕ СтруктураПрежнихЗначений.ИНН = ИНН 
			Или НЕ СтруктураПрежнихЗначений.КодПоЕДРПОУ = КодПоЕДРПОУ 
			Или НЕ СтруктураПрежнихЗначений.ВидКонтрагента = ВидКонтрагента Тогда
			
			НужноВыполнятьПроверку = Истина;
			
		КонецЕсли;
		
		ИзменилсяИНН = НЕ СтруктураПрежнихЗначений.ИНН = ИНН;
		ИзменилсяЕДРПОУ = НЕ СтруктураПрежнихЗначений.КодПоЕДРПОУ = КодПоЕДРПОУ;
		
		ЭтоЮрЛицоБыло = СтруктураПрежнихЗначений.ВидКонтрагента = Перечисления.ВидыКонтрагентов.ЮридическоеЛицо;
		
		Если НужноВыполнятьПроверку 
			И СтруктураПрежнихЗначений.ИННВведенКорректно 
			И (СтруктураПрежнихЗначений.ЕДРПОУВведенКорректно Или ПустаяСтрока(СтруктураПрежнихЗначений.КодПоЕДРПОУ)) Тогда
			
			Если НЕ СтруктураПрежнихЗначений.ИНН = ИНН
				Или НЕ СтруктураПрежнихЗначений.КодПоЕДРПОУ = КодПоЕДРПОУ Тогда
			
				Блокировка = Новый БлокировкаДанных;
				
				Если НЕ СтруктураПрежнихЗначений.ИНН = ИНН Тогда
			
					ЭлементБлокировкиПоПрежнемуИНН = Блокировка.Добавить("РегистрСведений.НаличиеДублейУКонтрагентов");
					ЭлементБлокировкиПоПрежнемуИНН.УстановитьЗначение("ИНН", СтруктураПрежнихЗначений.ИНН);
					ЭлементБлокировкиПоПрежнемуИНН.Режим = РежимБлокировкиДанных.Исключительный;
					
				КонецЕсли;
				
				Если НЕ СтруктураПрежнихЗначений.КодПоЕДРПОУ = КодПоЕДРПОУ И ЭтоЮрЛицоБыло Тогда
			
					ЭлементБлокировкиПоПрежнемуЕДРПОУ = Блокировка.Добавить("РегистрСведений.НаличиеДублейУКонтрагентов");
					ЭлементБлокировкиПоПрежнемуЕДРПОУ.УстановитьЗначение("ЕДРПОУ", СтруктураПрежнихЗначений.КодПоЕДРПОУ);
					ЭлементБлокировкиПоПрежнемуЕДРПОУ.Режим = РежимБлокировкиДанных.Исключительный;
					
				КонецЕсли;
			
				Блокировка.Заблокировать();
				
			КонецЕсли;
			
			ПрежнийМассивДублей = Справочники.Контрагенты.ЕстьЗаписиВРегистреДублей(СокрЛП(СтруктураПрежнихЗначений.ИНН), 
																								  СокрЛП(СтруктураПрежнихЗначений.КодПоЕДРПОУ), 
																								  Ссылка);
		Иначе
			ПрежнийМассивДублей = Новый Массив;
		КонецЕсли;
		
	Иначе
		
		ПрежнийМассивДублей = Новый Массив;
		
	КонецЕсли;
	
	Если НужноВыполнятьПроверку Тогда
		
		ОписаниеОшибки = "";
		Если ПустаяСтрока(ИНН) Тогда
			ИННВведенКорректно = Истина;
		Иначе
			ИННВведенКорректно = РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(ИНН, ЭтоЮрЛицо, ОписаниеОшибки);
		КонецЕсли;
		
		Если ПустаяСтрока(КодПоЕДРПОУ) Тогда
			ЕДРПОУВведенКорректно = Истина;
		Иначе
			ЕДРПОУВведенКорректно = РегламентированныеДанныеКлиентСервер.ЕДРПОУСоответствуетТребованиям(КодПоЕДРПОУ, ЭтоЮрЛицо, ОписаниеОшибки);
		КонецЕсли;
		
		Если (ИзменилсяИНН Или ИзменилсяЕДРПОУ)
			И (ИННВведенКорректно И Не ПустаяСтрока(ИНН))
			И (Не ЭтоЮрЛицо Или (ЕДРПОУВведенКорректно И Не ПустаяСтрока(КодПоЕДРПОУ))) Тогда
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировкиПоИНН = Блокировка.Добавить("РегистрСведений.НаличиеДублейУКонтрагентов");
			ЭлементБлокировкиПоИНН.УстановитьЗначение("ИНН", ИНН);
			ЭлементБлокировкиПоИНН.Режим = РежимБлокировкиДанных.Исключительный;
			
			Если ЭтоЮрЛицо Тогда
				
				ЭлементБлокировкиПоЕДРПОУ = Блокировка.Добавить("РегистрСведений.НаличиеДублейУКонтрагентов");
				ЭлементБлокировкиПоЕДРПОУ.УстановитьЗначение("ЕДРПОУ", КодПоЕДРПОУ);
				ЭлементБлокировкиПоЕДРПОУ.Режим = РежимБлокировкиДанных.Исключительный;
				
			КонецЕсли;
			
			Блокировка.Заблокировать();
			
			МассивДублей = Справочники.Контрагенты.ПроверитьДублиСправочникаКонтрагентыПоИННЕДРПОУ(СокрЛП(ИНН), 
																								СокрЛП(КодПоЕДРПОУ), 
																								Ссылка, Истина);
																								
			Если МассивДублей.Количество() > 0 Тогда
				
				// Для нового элемента Ссылка будет доступна только ПриЗаписи, там и запишем.
				ДополнительныеСвойства.НужноЗаписыватьВРегистрПриЗаписи = Истина;
				
				Для Каждого ЭлементМассива Из МассивДублей Цикл
					Справочники.Контрагенты.ВыполнитьДвиженияПоРегиструДублей(ЭлементМассива, ИНН, КодПоЕДРПОУ, Ложь);
				КонецЦикла;
				
			КонецЕсли;
			
			Если ПрежнийМассивДублей.Количество() > 0 Тогда
				
				Справочники.Контрагенты.ВыполнитьДвиженияПоРегиструДублей(Ссылка, СтруктураПрежнихЗначений.ИНН, СтруктураПрежнихЗначений.КодПоЕДРПОУ, Истина);
				
				Если ПрежнийМассивДублей.Количество() = 1 Тогда
					Справочники.Контрагенты.ВыполнитьДвиженияПоРегиструДублей(ПрежнийМассивДублей[0], СтруктураПрежнихЗначений.ИНН, СтруктураПрежнихЗначений.КодПоЕДРПОУ, Истина);
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			Если ПрежнийМассивДублей.Количество() > 0 Тогда
				
				Справочники.Контрагенты.ВыполнитьДвиженияПоРегиструДублей(Ссылка, СтруктураПрежнихЗначений.ИНН, СтруктураПрежнихЗначений.КодПоЕДРПОУ, Истина);
			
				Если ПрежнийМассивДублей.Количество() = 1 Тогда
					Справочники.Контрагенты.ВыполнитьДвиженияПоРегиструДублей(ПрежнийМассивДублей[0], СтруктураПрежнихЗначений.ИНН, СтруктураПрежнихЗначений.КодПоЕДРПОУ, Истина);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
